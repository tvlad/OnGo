<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="4" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="3700" started-at="2016-05-13T11:09:29Z" finished-at="2016-05-13T11:09:32Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="3700" started-at="2016-05-13T11:09:29Z" finished-at="2016-05-13T11:09:32Z">
      <class name="onGoByRestAssured.ApiTest">
        <test-method status="PASS" signature="init()[pri:0, instance:onGoByRestAssured.ApiTest@17c68925]" name="init" is-config="true" duration-ms="117" started-at="2016-05-13T14:09:28Z" finished-at="2016-05-13T14:09:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="login01()[pri:0, instance:onGoByRestAssured.ApiTest@17c68925]" name="login01" duration-ms="1626" started-at="2016-05-13T14:09:29Z" finished-at="2016-05-13T14:09:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login01 -->
        <test-method status="PASS" signature="ifAllBad(org.testng.ITestResult)[pri:0, instance:onGoByRestAssured.ApiTest@17c68925]" name="ifAllBad" is-config="true" duration-ms="238" started-at="2016-05-13T14:09:30Z" finished-at="2016-05-13T14:09:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login01 status=SUCCESS method=ApiTest.login01()[pri:0, instance:onGoByRestAssured.ApiTest@17c68925] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ifAllBad -->
        <test-method status="FAIL" signature="show_Guide_Braintree_Customer()[pri:0, instance:onGoByRestAssured.ApiTest@17c68925]" name="show_Guide_Braintree_Customer" duration-ms="1433" started-at="2016-05-13T14:09:30Z" finished-at="2016-05-13T14:09:32Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Response body doesn't match expectation.
Expected: The content to match the given JSON schema.
error: instance type (string) does not match any allowed primitive type (allowed: ["array"])
    level: "error"
    schema: {"loadingURI":"file:/D:/MyDoc/Java-test/onGo/Jsons/show_Guide_Braintree_Customer.json#","pointer":"/properties/last_name"}
    instance: {"pointer":"/last_name"}
    domain: "validation"
    keyword: "type"
    found: "string"
    expected: ["array"]

  Actual: {"id":"21349590","first_name":"Tvlad","last_name":"Test","company":"LETZGRO","email":"test@letzgro.com","phone":"312.555.1234","fax":"614.555.5678","website":"www.example.com","created_at":"2016-04-12T15:49:48.000Z","updated_at":"2016-04-12T15:49:48.000Z","credit_cards":[],"default_credit_card":null}
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Response body doesn't match expectation.
Expected: The content to match the given JSON schema.
error: instance type (string) does not match any allowed primitive type (allowed: ["array"])
    level: "error"
    schema: {"loadingURI":"file:/D:/MyDoc/Java-test/onGo/Jsons/show_Guide_Braintree_Customer.json#","pointer":"/properties/last_name"}
    instance: {"pointer":"/last_name"}
    domain: "validation"
    keyword: "type"
    found: "string"
    expected: ["array"]

  Actual: {"id":"21349590","first_name":"Tvlad","last_name":"Test","company":"LETZGRO","email":"test@letzgro.com","phone":"312.555.1234","fax":"614.555.5678","website":"www.example.com","created_at":"2016-04-12T15:49:48.000Z","updated_at":"2016-04-12T15:49:48.000Z","credit_cards":[],"default_credit_card":null}

	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:80)
	at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:74)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:60)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:235)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:247)
	at com.jayway.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:598)
	at com.jayway.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:113)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:125)
	at com.jayway.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:760)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:52)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:154)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:166)
	at com.jayway.restassured.internal.ResponseSpecificationImpl.content(ResponseSpecificationImpl.groovy:92)
	at com.jayway.restassured.specification.ResponseSpecification$content$0.callCurrent(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:52)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:154)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:174)
	at com.jayway.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:230)
	at com.jayway.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:258)
	at onGoByRestAssured.ApiTest.show_Guide_Braintree_Customer(ApiTest.java:138)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:648)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:834)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1142)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1176)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1101)
	at org.testng.TestNG.run(TestNG.java:1009)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- show_Guide_Braintree_Customer -->
        <test-method status="PASS" signature="ifAllBad(org.testng.ITestResult)[pri:0, instance:onGoByRestAssured.ApiTest@17c68925]" name="ifAllBad" is-config="true" duration-ms="41" started-at="2016-05-13T14:09:32Z" finished-at="2016-05-13T14:09:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=show_Guide_Braintree_Customer status=FAILURE method=ApiTest.show_Guide_Braintree_Customer()[pri:0, instance:onGoByRestAssured.ApiTest@17c68925] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ifAllBad -->
        <test-method status="PASS" signature="show_all_roles()[pri:0, instance:onGoByRestAssured.ApiTest@17c68925]" name="show_all_roles" duration-ms="115" started-at="2016-05-13T14:09:32Z" finished-at="2016-05-13T14:09:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- show_all_roles -->
        <test-method status="PASS" signature="ifAllBad(org.testng.ITestResult)[pri:0, instance:onGoByRestAssured.ApiTest@17c68925]" name="ifAllBad" is-config="true" duration-ms="66" started-at="2016-05-13T14:09:32Z" finished-at="2016-05-13T14:09:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=show_all_roles status=SUCCESS method=ApiTest.show_all_roles()[pri:0, instance:onGoByRestAssured.ApiTest@17c68925] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ifAllBad -->
        <test-method status="PASS" signature="show_current_user()[pri:0, instance:onGoByRestAssured.ApiTest@17c68925]" name="show_current_user" duration-ms="109" started-at="2016-05-13T14:09:32Z" finished-at="2016-05-13T14:09:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- show_current_user -->
        <test-method status="PASS" signature="ifAllBad(org.testng.ITestResult)[pri:0, instance:onGoByRestAssured.ApiTest@17c68925]" name="ifAllBad" is-config="true" duration-ms="57" started-at="2016-05-13T14:09:32Z" finished-at="2016-05-13T14:09:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=show_current_user status=SUCCESS method=ApiTest.show_current_user()[pri:0, instance:onGoByRestAssured.ApiTest@17c68925] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ifAllBad -->
      </class> <!-- onGoByRestAssured.ApiTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
