<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="3" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="2098" started-at="2016-05-01T18:11:52Z" finished-at="2016-05-01T18:11:55Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="2098" started-at="2016-05-01T18:11:52Z" finished-at="2016-05-01T18:11:55Z">
      <class name="onGoByRestAssured.ApiTest">
        <test-method status="PASS" signature="init()[pri:0, instance:onGoByRestAssured.ApiTest@2752f6e2]" name="init" is-config="true" duration-ms="132" started-at="2016-05-01T21:11:52Z" finished-at="2016-05-01T21:11:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="login01()[pri:0, instance:onGoByRestAssured.ApiTest@2752f6e2]" name="login01" duration-ms="1572" started-at="2016-05-01T21:11:52Z" finished-at="2016-05-01T21:11:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login01 -->
        <test-method status="PASS" signature="ifAllBad(org.testng.ITestResult)[pri:0, instance:onGoByRestAssured.ApiTest@2752f6e2]" name="ifAllBad" is-config="true" duration-ms="196" started-at="2016-05-01T21:11:54Z" finished-at="2016-05-01T21:11:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login01 status=SUCCESS method=ApiTest.login01()[pri:0, instance:onGoByRestAssured.ApiTest@2752f6e2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ifAllBad -->
        <test-method status="PASS" signature="show_all_roles()[pri:0, instance:onGoByRestAssured.ApiTest@2752f6e2]" name="show_all_roles" duration-ms="133" started-at="2016-05-01T21:11:54Z" finished-at="2016-05-01T21:11:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- show_all_roles -->
        <test-method status="PASS" signature="ifAllBad(org.testng.ITestResult)[pri:0, instance:onGoByRestAssured.ApiTest@2752f6e2]" name="ifAllBad" is-config="true" duration-ms="38" started-at="2016-05-01T21:11:54Z" finished-at="2016-05-01T21:11:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=show_all_roles status=SUCCESS method=ApiTest.show_all_roles()[pri:0, instance:onGoByRestAssured.ApiTest@2752f6e2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ifAllBad -->
        <test-method status="FAIL" signature="show_current_user()[pri:0, instance:onGoByRestAssured.ApiTest@2752f6e2]" name="show_current_user" duration-ms="110" started-at="2016-05-01T21:11:54Z" finished-at="2016-05-01T21:11:55Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Fucking shit is happened!  expected [201] but found [200]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Fucking shit is happened!  expected [201] but found [200]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertEquals(Assert.java:125)
	at org.testng.Assert.assertEquals(Assert.java:372)
	at onGoByRestAssured.ApiTest.show_current_user(ApiTest.java:98)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:648)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:834)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1142)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1176)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1101)
	at org.testng.TestNG.run(TestNG.java:1009)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- show_current_user -->
        <test-method status="PASS" signature="ifAllBad(org.testng.ITestResult)[pri:0, instance:onGoByRestAssured.ApiTest@2752f6e2]" name="ifAllBad" is-config="true" duration-ms="37" started-at="2016-05-01T21:11:55Z" finished-at="2016-05-01T21:11:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=show_current_user status=FAILURE method=ApiTest.show_current_user()[pri:0, instance:onGoByRestAssured.ApiTest@2752f6e2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ifAllBad -->
      </class> <!-- onGoByRestAssured.ApiTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
